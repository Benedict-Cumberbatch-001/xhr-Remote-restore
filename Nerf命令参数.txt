***Instant-ngp***

#提取视频帧
python scripts/colmap2nerf.py --video_in data\nerf\chair\VID_20231121_161900.MP4 --video_fps 1 --run_colmap --aabb_scale 32 --overwrite

#colmap特征匹配
 python G:\Github_Projects\Instant-NGP-for-RTX-3000-and-4000\scripts\colmap2nerf.py --colmap_matcher exhaustive --run_colmap --aabb_scale 32 --overwrite


***Nerfstudio***
跟着官方文档走，Autodesk不能用colmap
#处理输入数据
ns-process-data {images, video} --data {DATA_PATH} --output-dir {PROCESSED_DATA_DIR}
ns-process-data images --data data/fox/images --output-dir data/fox/colmap

#训练
ns-train nerfacto --data {PROCESSED_DATA_DIR}
ns-train nerfacto --data data/fox/colmap --vis viewer_legacy

#导出点云
ns-export pointcloud --load-config outputs/colmap/nerfacto/2024-12-09_154059/config.yml --output-dir exports/pcd  --normal-method open3d

***Gaussian Splatting***

requirements.txt:
# Additional dependencies
tqdm
plyfile
opencv-python
joblib
# Pip-based submodules
submodules/diff-gaussian-rasterization
submodules/simple-knn
submodules/fused-ssim


conda create -n test python=3.9 -y &&  conda activate test
conda init bash && source /root/.bashrc
pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116
pip install -r requirements.txt

#训练3000步保存
python train.py -s data/fox --save_iterations 3000


***SuGar***
需要先拷贝git项目

python -c "import torch; print(torch.cuda.is_available(),torch.__version__)"


pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 --index-url https://download.pytorch.org/whl/cu118

conda install -c fvcore -c iopath -c conda-forge fvcore iopath -y && conda install pytorch3d==0.7.4 -c pytorch3d -y && conda install -c plotly plotly -y && conda install -c conda-forge rich -y && conda install -c conda-forge plyfile==0.8.1 -y


conda install -c conda-forge jupyterlab -y && conda install -c conda-forge nodejs -y && conda install -c conda-forge ipywidgets -y

pip install open3d
pip install --upgrade PyMCubes

python train_full_pipeline.py -s <path to COLMAP dataset> -r dn_consistency --high_poly True --export_obj True --gs_output_dir <path to the Gaussian Splatting output directory>

python train_full_pipeline.py -s data/fox -r "dn_consistency" --low_poly True --export_obj True --gs_output_dir data/fox3000
python train_full_pipeline.py -s data/fox -r "dn_consistency" --high_poly True --export_obj True --gs_output_dir data/fox3000 --refinement_time "long" --eval False

****CoTracker***

python demo.py --grid_size 50


****2dgs***
requirements.txt
ffmpeg
pillow==10.2.0
pip==23.3.1
typing_extensions==4.9.0
open3d==0.18.0
mediapy==1.1.2
lpips==0.1.4
scikit-image==0.21.0
tqdm==4.66.2
trimesh==4.3.2
-e submodules/diff-surfel-rasterization
-e submodules/simple-knn
plyfile
opencv-python

python train.py -s <path to COLMAP or NeRF Synthetic dataset>
python render.py -m <path to pre-trained model> -s <path to COLMAP dataset> 
python view.py -s <path to COLMAP or NeRF Synthetic dataset> -m <path to trained model> 

***FOCUS***
先安装torch 匹配nvcc
安装pytorch3d
pytorch3d安装方法：
windows：git下来自己安装，pip install -e .
linux:使用conda安装

python FOCUS/run_focus.py --method sfm --source_folder data/fox --output_folder output --colmap_exe D:\xuhaoran\COLMAP-3.8-windows-cuda\bin\colmap.exe --overwrite

python FOCUS/run_focus.py --method sfm --source_folder data/rgb --output_folder output --colmap_exe D:\xuhaoran\COLMAP-3.8-windows-cuda\bin\colmap.exe  --make_predictions --overwrite